{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workik_assignment\\\\chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isSending, setIsSending] = useState(false);\n  const bottomRef = useRef();\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"start\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!input) return;\n    setMessages([...messages, {\n      type: 'user',\n      message: input,\n      timestamp: new Date()\n    }]);\n    setInput('');\n    setIsSending(true);\n    try {\n      const response = await fetch('http://localhost:5000/query', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: input\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessages([...messages, {\n          type: 'user',\n          message: input,\n          timestamp: new Date()\n        }, {\n          type: 'bot',\n          message: data.response,\n          timestamp: new Date()\n        }]);\n      } else {\n        setMessages([...messages, {\n          type: 'bot',\n          message: 'Unable to connect to the server',\n          timestamp: new Date()\n        }]);\n      }\n    } catch (error) {\n      setMessages([...messages, {\n        type: 'bot',\n        message: 'Encountered an error',\n        timestamp: new Date()\n      }]);\n    }\n    setIsSending(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: [msg.message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: new Date(msg.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)), isSending && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: \"Sending...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-field\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xRsEjpHGDkzU85t8URmS8hEBwzQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","isSending","setIsSending","bottomRef","scrollToBottom","current","scrollIntoView","behavior","block","handleSubmit","event","preventDefault","type","message","timestamp","Date","response","fetch","method","headers","body","JSON","stringify","query","data","json","ok","error","className","children","map","msg","index","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["E:/Workik_assignment/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './index.css';\r\n\r\nconst App = () => {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isSending, setIsSending] = useState(false);\r\n  const bottomRef = useRef();\r\n\r\n  const scrollToBottom = () => {\r\n    bottomRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!input) return;\r\n\r\n    setMessages([...messages, { type: 'user', message: input, timestamp: new Date() }]);\r\n    setInput('');\r\n    setIsSending(true);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/query', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query: input })\r\n      });\r\n\r\n      const data = await response.json();\r\n    \r\n      if (response.ok) {\r\n        setMessages([...messages, { type: 'user', message: input, timestamp: new Date() }, { type: 'bot', message: data.response, timestamp: new Date() }]);\r\n      } else {\r\n        setMessages([...messages, { type: 'bot', message: 'Unable to connect to the server', timestamp: new Date() }]);\r\n      }\r\n\r\n    } catch (error) {\r\n      setMessages([...messages, { type: 'bot', message: 'Encountered an error', timestamp: new Date() }]);\r\n    }\r\n\r\n    setIsSending(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg, index) => (\r\n            <div key={index} className={`message ${msg.type}`}>\r\n              {msg.message}\r\n              <div className=\"timestamp\">{new Date(msg.timestamp).toLocaleString()}</div>\r\n            </div>\r\n          ))}\r\n          {isSending && <div className=\"message bot\">Sending...</div>}\r\n          <div ref={bottomRef} />\r\n        </div>\r\n        <form className=\"input-container\" onSubmit={handleSubmit}>\r\n          <input\r\n            className=\"input-field\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n          />\r\n          <button className=\"send-button\" type=\"submit\">Send</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}